import Restaurant.Model.ModelBan;
import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.DriverManager;
import java.sql.SQLException;
import net.proteanit.sql.DbUtils;



/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author DELL
 */
public class QLBan extends javax.swing.JFrame {
    Connection con = null;
    PreparedStatement Pst = null;
    ResultSet Rs = null;
    Statement St = null;

    /**
     * Creates new form QLBan
     */
    public QLBan() {
        initComponents();
        showBan();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        BanTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtTenBan = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtTrangThai = new javax.swing.JComboBox<>();
        btnADD = new javax.swing.JButton();
        btnUPDATE = new javax.swing.JButton();
        btnDELETE = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(25, 118, 211));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 28)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("QUẢN LÝ BÀN");

        BanTable.setAutoCreateRowSorter(true);
        BanTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Mã bàn", "Tên bàn", "Trạng thái"
            }
        ));
        BanTable.setGridColor(new java.awt.Color(25, 118, 211));
        BanTable.setRowHeight(25);
        jScrollPane1.setViewportView(BanTable);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Tên bàn");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Trạng thái");

        txtTrangThai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Trong", "Dang phuc vu" }));
        txtTrangThai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTrangThaiActionPerformed(evt);
            }
        });

        btnADD.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnADD.setForeground(new java.awt.Color(25, 118, 211));
        btnADD.setText("ADD");
        btnADD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnADDActionPerformed(evt);
            }
        });

        btnUPDATE.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnUPDATE.setForeground(new java.awt.Color(25, 118, 211));
        btnUPDATE.setText("UPDATE");
        btnUPDATE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUPDATEActionPerformed(evt);
            }
        });

        btnDELETE.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnDELETE.setForeground(new java.awt.Color(25, 118, 211));
        btnDELETE.setText("DELETE");
        btnDELETE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDELETEActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(25, 118, 211));
        jButton1.setText("HOME");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 679, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTenBan)
                            .addComponent(txtTrangThai, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnADD, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnUPDATE, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addComponent(btnDELETE, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 485, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jButton1))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTenBan, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(75, 75, 75)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(75, 75, 75)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnADD, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnUPDATE, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(btnDELETE, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtTrangThaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTrangThaiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTrangThaiActionPerformed

    private void showBan(){
        try{
            String url = "jdbc:oracle:thin:@//localhost:1521/orcl21"; // Use service name if applicable
            String username = "C##JAVA";
            String password = "1";
            con = DriverManager.getConnection(url, username, password);
            St = con.createStatement();
            Rs = St.executeQuery("select * from Ban");
            BanTable.setModel(DbUtils.resultSetToTableModel(Rs));
            
        }catch(Exception e){
            
        }
    }
    private void btnADDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnADDActionPerformed
        // TODO add your handling code here:
    if(txtTenBan.getText().isEmpty() || txtTrangThai.getSelectedIndex() == -1) {
        JOptionPane.showMessageDialog(this, "Missing Data!");
    } else {
        Connection con = null;
        PreparedStatement p1 = null;
        PreparedStatement Save = null;
        ResultSet r = null;

        try {
            // Kết nối tới cơ sở dữ liệu
            String url = "jdbc:oracle:thin:@//localhost:1521/orcl21"; // Use service name if applicable
            String username = "C##JAVA";
            String password = "1";
            con = DriverManager.getConnection(url, username, password);

            // Tìm giá trị MaBan lớn nhất hiện tại
            p1 = con.prepareStatement("SELECT MAX(MaBan) as MaBan FROM BAN");
            r = p1.executeQuery();
            int MaBan = 1; // Khởi tạo MaBan với giá trị mặc định
            if (r.next()) {
                MaBan = r.getInt("MaBan") + 1;
            }

            // Thêm bản ghi mới vào bảng BAN
            Save = con.prepareStatement("INSERT INTO BAN (MaBan, TenBan, TrangThai) VALUES (?,?,?)");
            Save.setInt(1, MaBan);
            Save.setString(2, txtTenBan.getText().trim());
            Save.setString(3, txtTrangThai.getSelectedItem().toString());
            int row = Save.executeUpdate();
            if (row > 0) {
                JOptionPane.showMessageDialog(this, "ADD successful!");
                showBan();
            } else {
                JOptionPane.showMessageDialog(this, "ADD failed!");
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
        } finally {
            // Đóng các tài nguyên
            try {
                if (r != null) r.close();
                if (p1 != null) p1.close();
                if (Save != null) Save.close();
                if (con != null) con.close();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Error closing resources: " + ex.getMessage());
            }
        }
    }

    }//GEN-LAST:event_btnADDActionPerformed

    private void btnDELETEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDELETEActionPerformed
        // TODO add your handling code here:
        int selectedRow = BanTable.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select a row to delete!");
        } else {
            int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this record?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                Connection con = null;
                PreparedStatement pst = null;

                try {
                    // Kết nối tới cơ sở dữ liệu
                    String url = "jdbc:oracle:thin:@//localhost:1521/orcl21"; // Use service name if applicable
                    String username = "C##JAVA";
                    String password = "1";
                    con = DriverManager.getConnection(url, username, password);

                    // Lấy giá trị MaBan của hàng được chọn
                    String maBan = BanTable.getValueAt(selectedRow, 0).toString();

                    // Xóa bản ghi trong bảng BAN
                    String sql = "DELETE FROM BAN WHERE MaBan = ?";
                    pst = con.prepareStatement(sql);
                    pst.setString(1, maBan);
                    int row = pst.executeUpdate();

                    if (row > 0) {
                        JOptionPane.showMessageDialog(this, "DELETE successful!");
                        // Cập nhật lại JTable
                        showBan();
                    } else {
                        JOptionPane.showMessageDialog(this, "DELETE failed!");
                    }

                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
                } finally {
                    // Đóng các tài nguyên
                    try {
                        if (pst != null) pst.close();
                        if (con != null) con.close();
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(this, "Error closing resources: " + ex.getMessage());
                    }
                }
            }
        }
    }//GEN-LAST:event_btnDELETEActionPerformed

    private void btnUPDATEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUPDATEActionPerformed
        // TODO add your handling code here:
        int selectedRow = BanTable.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select a row to update!");
        } else {
            String tenBan = txtTenBan.getText();
            String trangThai = txtTrangThai.getSelectedItem().toString();

            if (tenBan.isEmpty() || trangThai.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Missing Data!");
            } else {
                int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to update this record?", "Confirm Update", JOptionPane.YES_NO_OPTION);
                if (confirm == JOptionPane.YES_OPTION) {
                    Connection con = null;
                    PreparedStatement pst = null;

                    try {
                        // Kết nối tới cơ sở dữ liệu
                        String url = "jdbc:oracle:thin:@//localhost:1521/orcl21"; // Use service name if applicable
                        String username = "C##JAVA";
                        String password = "1";
                        con = DriverManager.getConnection(url, username, password);

                        // Lấy giá trị MaBan của hàng được chọn
                        String maBan = BanTable.getValueAt(selectedRow, 0).toString();

                        // Cập nhật bản ghi trong bảng BAN
                        String sql = "UPDATE BAN SET TenBan = ?, TrangThai = ? WHERE MaBan = ?";
                        pst = con.prepareStatement(sql);
                        pst.setString(1, tenBan);
                        pst.setString(2, trangThai);
                        pst.setString(3, maBan);
                        int row = pst.executeUpdate();

                        if (row > 0) {
                            JOptionPane.showMessageDialog(this, "UPDATE successful!");
                            // Cập nhật lại JTable
                            showBan();
                        } else {
                            JOptionPane.showMessageDialog(this, "UPDATE failed!");
                        }

                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
                    } finally {
                        // Đóng các tài nguyên
                        try {
                            if (pst != null) pst.close();
                            if (con != null) con.close();
                        } catch (SQLException ex) {
                            JOptionPane.showMessageDialog(this, "Error closing resources: " + ex.getMessage());
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_btnUPDATEActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        new HomePage().setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QLBan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QLBan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QLBan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QLBan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QLBan().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable BanTable;
    private javax.swing.JButton btnADD;
    private javax.swing.JButton btnDELETE;
    private javax.swing.JButton btnUPDATE;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtTenBan;
    private javax.swing.JComboBox<String> txtTrangThai;
    // End of variables declaration//GEN-END:variables
}
